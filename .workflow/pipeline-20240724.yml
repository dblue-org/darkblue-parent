version: '1.0'
name: pipeline-20240724
displayName: 部署到生产环境
triggers:
  trigger: auto
  push:
    branches:
      precise:
        - master
stages:
  - name: stage-0e40512c
    displayName: 编译
    strategy: naturally
    trigger: auto
    executor: []
    steps:
      - step: build@maven
        name: build_maven
        displayName: Maven 构建
        jdkVersion: '21'
        mavenVersion: 3.9.6
        commands:
          - '# 功能：打包'
          - '# 参数说明：'
          - '#    -Dmaven.test.skip=true：跳过单元测试'
          - '#    -U：每次构建检查依赖更新，可避免缓存中快照版本依赖不更新问题，但会牺牲部分性能'
          - '#    -e -X ：打印调试信息，定位疑难构建问题时建议使用此参数构建'
          - '#    -B：以batch模式运行，可避免日志打印时出现ArrayIndexOutOfBoundsException异常'
          - '# 使用场景：打包项目且不需要执行单元测试时使用'
          - mvn clean package -Pprod -Dmaven.test.skip=true -U -e -X -B
          - ''
          - '# 功能：自定义settings配置'
          - '# 使用场景：如需手工指定settings.xml，可使用如下方式'
          - '# 注意事项：如无需自定义settings配置且需要私有依赖仓库，可在该任务配置《私有仓库》处添加私有依赖'
          - '# mvn -U clean package -s ./settings.xml'
          - ''
        artifacts:
          - name: BUILD_ARTIFACT
            path:
              - ./darkblue-application/target
        settings: []
        caches:
          - ~/.m2
        notify: []
        strategy:
          retry: '0'
  - name: stage-b77c85ad
    displayName: 部署
    strategy: naturally
    trigger: auto
    executor: []
    steps:
      - step: deploy@agent
        name: deploy_agent
        displayName: 主机部署
        hostGroupID:
          ID: tencent-cloud-yb
          hostID:
            - 5d2e3102-69aa-4361-b643-6a472d69a923
        deployArtifact:
          - source: build
            name: output
            target: ~/gitee_go/deploy
            dependArtifact: BUILD_ARTIFACT
        script:
          - '# 功能：部署脚本会在部署主机组的每台机器上执行'
          - '# 使用场景：先将制品包解压缩到指定目录中，再执行启动脚本deploy.sh，脚本示例地址：https://gitee.com/gitee-go/spring-boot-maven-deploy-case/blob/master/deploy.sh'
          - '# mkdir -p /home/admin/app'
          - '# tar zxvf ~/gitee_go/deploy/output.tar.gz -C /home/admin/app'
          - '# sh /home/admin/app/deploy.sh restart'
          - '# 如果你是php之类的无需制品包的制品方式，可以使用 git clone 或者 git pull 将源代码更新到服务器，再执行其他命令'
          - '# git clone ***@***.git'
          - echo 'Hello Gitee Go!'
        notify: []
        strategy:
          retry: '0'
